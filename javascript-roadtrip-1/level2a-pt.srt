1
00:00:00,290 --> 00:00:00,580
[CANTANDO]

2
00:00:00,580 --> 00:00:03,890
Do labirinto dos loops até
o vale das variáveis, iremos ver

3
00:00:03,890 --> 00:00:05,630
o penhasco dos valores,
de início.

4
00:00:05,630 --> 00:00:07,070
O JavaScript é seu melhor
aliado.

5
00:00:07,070 --> 00:00:10,490
Planíces internas, cachoeiras de arquivos,
arrays, arquipélagos.

6
00:00:10,490 --> 00:00:12,680
Declarações em um deserto,
onde vocês irão ver

7
00:00:12,680 --> 00:00:13,670
quão longe podem ir.

8
00:00:13,670 --> 00:00:14,510
Aprenda o programa.

9
00:00:14,510 --> 00:00:15,700
Dê uma olhada.

10
00:00:15,700 --> 00:00:16,440
Compre um ingresso, entre

11
00:00:16,440 --> 00:00:18,260
Todos as bordo, vocês estão
nessa estação para

12
00:00:18,260 --> 00:00:20,070
aumentar seu conhecimento.

13
00:00:20,070 --> 00:00:22,510
Bon voyage e se jogue! Como
funções que você não

14
00:00:22,510 --> 00:00:23,300
evita,

15
00:00:23,300 --> 00:00:27,480
o JavaScript... Road Trip.

16
00:00:34,220 --> 00:00:35,350
Olá, viajantes.

17
00:00:35,350 --> 00:00:36,530
Espero que tenham gostado do nível um.

18
00:00:36,530 --> 00:00:39,050
E já saibam como tratar
alguns dados, mas precisamos saber

19
00:00:39,050 --> 00:00:39,990
como armazena-los.

20
00:00:39,990 --> 00:00:42,100
Então, é pra que estamos indo,
para o próximo nível.

21
00:00:42,100 --> 00:00:44,660
Aqui vem o nível dois,
Vale das Variáveis.

22
00:00:47,270 --> 00:00:51,580
O JavaScript usa variáveis para
armazenar e manipular dados.

23
00:00:51,580 --> 00:00:55,260
Você verá aqui uma sintaxe
básica para definir uma

24
00:00:55,260 --> 00:00:58,020
variável, chamada trainWhistles.

25
00:00:58,020 --> 00:01:00,810
Esse var é a palavra-chave
das variáveis.

26
00:01:00,810 --> 00:01:04,250
Isso informa ao navegador para
definir algum espaço para a

27
00:01:04,250 --> 00:01:05,970
variável em si.

28
00:01:05,970 --> 00:01:08,780
A próxima coisa que você irá ver é
o nome trainWhistles.

29
00:01:08,780 --> 00:01:10,980
Este é o nome
da variável.

30
00:01:10,980 --> 00:01:13,600
O sinal de igual é o
operador de atribuição.

31
00:01:13,600 --> 00:01:16,240
Observe que é um sinal
de igual único.

32
00:01:16,240 --> 00:01:18,340
E por último, o valor 3.

33
00:01:18,340 --> 00:01:21,490
Este é o valor que será
armazenado dentro da sua

34
00:01:21,490 --> 00:01:22,740
variável chamada trainWhistles.

35
00:01:25,690 --> 00:01:28,430
Agora podemos chamar a variável
trainWhistles, nós

36
00:01:28,430 --> 00:01:30,915
automaticamente temos o valor
três retornado para nós.

37
00:01:34,850 --> 00:01:37,950
Exietm algumas regras e
normas que seguimos para

38
00:01:37,950 --> 00:01:40,670
dar nomes a variáveis
JavaScript.

39
00:01:40,670 --> 00:01:43,760
A primeira é que não podemos
ter nenhum espaço no

40
00:01:43,760 --> 00:01:45,390
nome da váriavel.

41
00:01:45,390 --> 00:01:47,850
O compilador irá retornar um
erro para você se você tentar

42
00:01:47,850 --> 00:01:50,730
por espaços em um nome de váriavel.

43
00:01:50,730 --> 00:01:53,600
A próxima coisa é que não podemos ter
nenhum dígito no

44
00:01:53,600 --> 00:01:55,580
início do nome da nossa váriavel.

45
00:01:55,580 --> 00:01:56,360
Não gostamos disso.

46
00:01:56,360 --> 00:01:58,850
O compilador não
gosta disso.

47
00:01:58,850 --> 00:02:00,840
Podemos usar We can use sublinhados,
emora eles sejam

48
00:02:00,840 --> 00:02:01,700
irritantes.

49
00:02:01,700 --> 00:02:06,020
Podemos usar sinais de cifrão,
mas não seja esse tipo de pessoa.

50
00:02:06,020 --> 00:02:09,090
Podemos até mesmo usar cifrões
e sublinhados juntos.

51
00:02:09,090 --> 00:02:12,950
Então, é meio idiota, mas
tecnicamente é válido.

52
00:02:12,950 --> 00:02:15,190
Aqui está um ótimo
nome de váriavel.

53
00:02:15,190 --> 00:02:18,610
Observe que o inicio é
uma letra minúscula e todas

54
00:02:18,610 --> 00:02:21,400
palavras em seguir começam com
maiusculas.

55
00:02:21,400 --> 00:02:24,890
Você pode ja ter escutado sobre isso
como "camel case".

56
00:02:24,890 --> 00:02:27,130
E este nome de váriavel
final usa um

57
00:02:27,130 --> 00:02:29,370
dígito bem no final.

58
00:02:29,370 --> 00:02:30,620
Fatality.

59
00:02:33,660 --> 00:02:36,500
E se quisermos mudar
o conteúdo de uma váriavel?

60
00:02:36,500 --> 00:02:37,100
Adivinha?

61
00:02:37,100 --> 00:02:38,770
ë seu dia de sorte.

62
00:02:38,770 --> 00:02:42,910
No momento nossa váriavel
trainWhistles esta definida como 4.

63
00:02:42,910 --> 00:02:46,370
Mas se quisermos mudar o valor de
trainWhistles, temos apenas que

64
00:02:46,370 --> 00:02:49,520
reusar o operador de
definição e definir ele

65
00:02:49,520 --> 00:02:51,630
igual a um novo valor

66
00:02:51,630 --> 00:02:55,560
Observe que nós não usamos a
palavra chave "var"porque o

67
00:02:55,560 --> 00:02:59,180
console já sabe  que uma
váriavel trainWhistles está

68
00:02:59,180 --> 00:03:01,350
na memória

69
00:03:01,350 --> 00:03:04,350
Agora nossa trainWhistles
vale 9.

70
00:03:04,350 --> 00:03:08,130
Também podemos usar o próprio
valor de trainWhistles para

71
00:03:08,130 --> 00:03:11,360
modificar o conteúdo da
váriavel trainWhistles.

72
00:03:11,360 --> 00:03:14,420
Aqui você pode ver o que estamos
dizendo, pegue o valor de trainWhistles,

73
00:03:14,420 --> 00:03:18,670
adicione 3 a ele, e armazene
de volta na

74
00:03:18,670 --> 00:03:21,040
váriavel trainWhistles.

75
00:03:21,040 --> 00:03:24,850
Agora, porque o valor inicial de
trainWhistles era 9, temos

76
00:03:24,850 --> 00:03:27,630
9 mais 3 armazenado em trainWhistles,
que

77
00:03:27,630 --> 00:03:28,880
resulta em 12.

78
00:03:32,100 --> 00:03:35,640
Outra maneira de escrever
exatamente a mesma expressão é com

79
00:03:35,640 --> 00:03:38,500
o operador mais igual.

80
00:03:38,500 --> 00:03:40,910
Esses diz ao console
para pegar a váriavel trainWhistles

81
00:03:40,910 --> 00:03:44,190
e adicionar 3 à ela e
armazenar de volta à

82
00:03:44,190 --> 00:03:46,700
váriavel trainWhistles.

83
00:03:46,700 --> 00:03:48,510
Agora temos um total de 15
em trainWhistles.

84
00:03:52,370 --> 00:03:55,100
Todas as operações podem
ser usadas na declaração de

85
00:03:55,100 --> 00:03:55,910
váriaveis.

86
00:03:55,910 --> 00:03:58,560
Aqui podemos ver que a váriavel
trainWhistles está sendo

87
00:03:58,560 --> 00:04:02,000
multiplicada por 2 antes de
ser armazenada de volta na

88
00:04:02,000 --> 00:04:03,860
váriavel trainWhistles.

89
00:04:03,860 --> 00:04:06,430
Agora temos 30 em trainWhistles.

90
00:04:06,430 --> 00:04:10,540
E de novo, o operador vezes igual
é exatamente o mesmo que

91
00:04:10,540 --> 00:04:12,040
a expressão anterior.

92
00:04:12,040 --> 00:04:14,700
E temos 60 em trainWhistles.

93
00:04:14,700 --> 00:04:16,829
Uau, 60 whistles -

94
00:04:16,829 --> 00:04:18,079
isso é muito.

95
00:04:20,220 --> 00:04:23,780
Nomes de váriaveis também poder agir como
substitutos para a informação que

96
00:04:23,780 --> 00:04:25,330
elas apontam.

97
00:04:25,330 --> 00:04:28,430
Isso signifiva que eu posso usar
váriaveis dentro de

98
00:04:28,430 --> 00:04:31,720
concatenações com strings para
me referir a informações que

99
00:04:31,720 --> 00:04:33,640
agora estão dentro da váriavel.

100
00:04:33,640 --> 00:04:37,000
Aqui você pode ver uma concatenação
de "All of our

101
00:04:37,000 --> 00:04:40,410
trains have" com a váriavel
trainWhistles, e acom o

102
00:04:40,410 --> 00:04:42,010
texto whistles.

103
00:04:42,010 --> 00:04:43,880
O que acontece no resultado?

104
00:04:43,880 --> 00:04:46,460
"All of our trains
have 3 whistles!"

105
00:04:46,460 --> 00:04:49,970
O nome da váriavel desaparece e
em vez dele a informação que

106
00:04:49,970 --> 00:04:53,450
a váriável contém é colocada
dentro da string.

107
00:04:53,450 --> 00:04:55,240
Adicionalmente, podemos colocar
váriaveis dentro de

108
00:04:55,240 --> 00:04:58,610
expressões que
concatenadas com strings.

109
00:04:58,610 --> 00:05:00,850
Nesta string, quando
trainWhistles é multiplicada por

110
00:05:00,850 --> 00:05:02,450
3, temos 9.

111
00:05:02,450 --> 00:05:04,540
E na string final
vemos, "But the

112
00:05:04,540 --> 00:05:08,260
Pollock 9000 has 9!"

113
00:05:08,260 --> 00:05:10,560
Mas espere, este tipo de código
é um pouco ruim.

114
00:05:10,560 --> 00:05:13,780
Poque o Pollock 9000 precisa
da sua própria váriavel whistles.

115
00:05:13,780 --> 00:05:15,620
Vamos fazer isso.

116
00:05:15,620 --> 00:05:17,770
Tudo que precisamos fazer é declarar
uma nova variável -

117
00:05:17,770 --> 00:05:18,640
e chamar ela em pollock9000 -

118
00:05:18,640 --> 00:05:22,460
e então definir essa
expressão que estamos usando

119
00:05:22,460 --> 00:05:24,620
na string para essa
nova váriavel.

120
00:05:24,620 --> 00:05:27,230
E agora podemos ver que
a pollock9000

121
00:05:27,230 --> 00:05:28,690
tem 9 trainWhistles.

122
00:05:32,440 --> 00:05:35,420
Agora que pollock9000 possui sua própria
váriavel, podemos usa-la

123
00:05:35,420 --> 00:05:36,850
dentro da string.

124
00:05:41,500 --> 00:05:43,860
Este é um jeito simples de
aumentar ou diminuir o

125
00:05:43,860 --> 00:05:46,720
valor de uma váriavel por 1
em qualquer direção.

126
00:05:46,720 --> 00:05:49,890
Isto é chamado incrementar e
decrementar.

127
00:05:49,890 --> 00:05:53,130
Aqui no lado esquerdo, você pode
ver que temos trainWhistles

128
00:05:53,130 --> 00:05:56,430
mais mais, que é uma sintaxe
simples para incrementar o

129
00:05:56,430 --> 00:05:58,660
valor de uma váriavel por 1.

130
00:05:58,660 --> 00:06:01,030
Agora você vê  que o valor de
trainWhistles é 4.

131
00:06:01,030 --> 00:06:04,180
Se quisermos decrementar  a
váriavel em 1, nós temos que

132
00:06:04,180 --> 00:06:07,390
usar uma sintaxe de menos menos, que
irá produzir um

133
00:06:07,390 --> 00:06:09,860
valor de 2 dentro da
váriavel trainWhistles.

