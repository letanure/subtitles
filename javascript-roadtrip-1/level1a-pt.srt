1
00:00:00,000 --> 00:00:03,120
Olá pessoal, e bem-vindos ao
JavaScript Road Trip.

2
00:00:03,120 --> 00:00:04,820
Se você ja surfou na
internet antes -

3
00:00:04,820 --> 00:00:05,860
e quem não surfou ainda -

4
00:00:05,860 --> 00:00:08,480
provavelmente você já ter executou
milhares, senão milhões, de

5
00:00:08,480 --> 00:00:10,660
linhas de código de Javascript.

6
00:00:10,660 --> 00:00:13,270
Apesar do JavaScript ter
sido criado principalmente para

7
00:00:13,270 --> 00:00:16,400
páginas iterativas, neste
tutorial, iremos nos focar

8
00:00:16,400 --> 00:00:18,980
principalmente nos blocos
fundamentais da

9
00:00:18,980 --> 00:00:22,240
linguagem JavaScript em si, então
desta maneira, você será capaz de

10
00:00:22,240 --> 00:00:24,820
iniciar com frameworks mais avançados
como JQuery.

11
00:00:24,820 --> 00:00:26,730
Agora neste primeiro curso,
você deverá

12
00:00:26,730 --> 00:00:28,790
ver os blocos de contrução
fundamentais da

13
00:00:28,790 --> 00:00:31,880
linguagem JavaScript, incluindo
como manipular valores com

14
00:00:31,880 --> 00:00:35,180
operadores, como saber como
criar e armazenar esses valores

15
00:00:35,180 --> 00:00:39,360
em variáveis, e como
achar, criar e executar

16
00:00:39,360 --> 00:00:42,250
arquivos JavaScript
com junto de código HTML.

17
00:00:42,250 --> 00:00:43,910
E com isso, todos a bordo!

18
00:00:43,910 --> 00:00:45,490
É hora de iniciar sua
jornada no

19
00:00:45,490 --> 00:00:46,790
JavaScript Road Trip.

20
00:00:46,790 --> 00:00:47,090
[CANTANDO]

21
00:00:47,090 --> 00:00:50,740
Do labirinto de loops até
o vale das variáveis, iremos ver

22
00:00:50,740 --> 00:00:52,140
o penhasco dos valores, de início.

23
00:00:52,140 --> 00:00:53,690
O JavaScript é seu melhor
aliado.

24
00:00:53,690 --> 00:00:57,010
Planíces inetrnas, cachoeiras de arquivos,
arrays, arquipélagos.

25
00:00:57,010 --> 00:00:59,190
Declarações em um deserto,
onde vocês irão ver

26
00:00:59,190 --> 00:01:00,190
quão longe podem ir.

27
00:01:00,190 --> 00:01:01,010
Aprenda o programa.

28
00:01:01,010 --> 00:01:01,680
Dê uma olhada.

29
00:01:01,680 --> 00:01:02,550
Compre um ingresso.

30
00:01:02,550 --> 00:01:03,640
Entre.

31
00:01:03,640 --> 00:01:05,424
Todos as bordo, vocês estão
nessa estação para

32
00:01:05,424 --> 00:01:06,580
aumentar seu conhecimento.

33
00:01:06,580 --> 00:01:09,350
Bon voyage e se jogue! Como
funções que você não

34
00:01:09,350 --> 00:01:14,210
evita, o JavaScript ...
Road Trip.

35
00:01:20,730 --> 00:01:21,380
Olá, viajantes.

36
00:01:21,380 --> 00:01:22,680
Bem vindos ao Nível 1 -

37
00:01:22,680 --> 00:01:24,260
Os penhascos do Valor.

38
00:01:24,260 --> 00:01:26,180
Se prepare para aprender
sobre números,

39
00:01:26,180 --> 00:01:27,550
operadores e strings.

40
00:01:30,710 --> 00:01:33,030
Existem dois simbolos que
precisamos nos famialiarizar

41
00:01:33,030 --> 00:01:34,910
enquanto percorremos
este curso.

42
00:01:34,910 --> 00:01:38,100
O primeiro é o símbolo maior que,
que representa o

43
00:01:38,100 --> 00:01:39,300
prompt do JavaScript.

44
00:01:39,300 --> 00:01:42,650
Aqui, iremos colocar o código
que será enviado

45
00:01:42,650 --> 00:01:44,080
para o console.

46
00:01:44,080 --> 00:01:46,230
A seta seguinte
é onde é exibido

47
00:01:46,230 --> 00:01:48,430
o resultado do código.

48
00:01:48,430 --> 00:01:49,610
A linguagem JavaScript

49
00:01:49,610 --> 00:01:51,880
reconhece números automáticamente.

50
00:01:51,880 --> 00:01:55,540
Então cocê pode ver se
digitarmos 24 no console,

51
00:01:55,540 --> 00:01:58,270
o console irá retornar
24 de volta.

52
00:01:58,270 --> 00:02:00,510
O mesmo ocorre para
valores decimais.

53
00:02:00,510 --> 00:02:06,610
Se digitarmos 3.14, também veremos
3.14 no resultado.

54
00:02:06,610 --> 00:02:08,919
Vamos tentar um pouco de
matemática no JavaScript.

55
00:02:08,919 --> 00:02:11,995
Seguem algumas operações comuns que
o console irá aceitar.

56
00:02:11,995 --> 00:02:14,066
A primeira é adição.

57
00:02:14,066 --> 00:02:19,920
A segunda é subtração
A terceira é multiplicação.

58
00:02:19,920 --> 00:02:21,680
Em seguida, temos divisão.

59
00:02:21,680 --> 00:02:24,200
E temos um operador especial
que você ve muito em

60
00:02:24,200 --> 00:02:26,510
programação de computadores
chamado Módulo.

61
00:02:26,510 --> 00:02:31,050
Módulo irá retornar o
resto de uma divisão.

62
00:02:31,050 --> 00:02:35,440
Você pode ver que se
dividimos 43 por 10, mesmo que

63
00:02:35,440 --> 00:02:38,320
em quatro vezes, o
resto dessa

64
00:02:38,320 --> 00:02:42,090
operação é 3.

65
00:02:42,090 --> 00:02:44,310
Nas operações básicas,
o JavaScript

66
00:02:44,310 --> 00:02:47,880
respeita a ordem padrão de
operações da matemática.

67
00:02:47,880 --> 00:02:50,440
Você deve se lembrar disso
pela sigla comum -

68
00:02:50,440 --> 00:02:54,400
parênteses, Expoentes,
Multiplicicação, Divisão,

69
00:02:54,400 --> 00:02:57,720
Adição e Subtração,
ou PEMDAS.

70
00:02:57,720 --> 00:03:00,450
Podemos ver aqui que se digitamos
uma expressão no

71
00:03:00,450 --> 00:03:04,470
console do Javascript, a primeira
coisa que será calculada

72
00:03:04,470 --> 00:03:07,380
é o parênteses que
contém 5 mais 7.

73
00:03:07,380 --> 00:03:08,820
Que irá retornar um 12.

74
00:03:08,820 --> 00:03:14,270
E então esse 12 será
multiplicado por 3 resultando em 36.

75
00:03:14,270 --> 00:03:16,640
Aqui está outra expressão
longa.

76
00:03:16,640 --> 00:03:18,990
Podemos ver que calculamos
o parênteses primeiro.

77
00:03:18,990 --> 00:03:22,440
3 vezes 4 vira 12 e
o resto da expressão

78
00:03:22,440 --> 00:03:23,920
continua.

79
00:03:23,920 --> 00:03:27,090
Em seguida, calculamos
12 dividido por 2,

80
00:03:27,090 --> 00:03:28,730
que resulta em 6.

81
00:03:28,730 --> 00:03:31,470
E, fazemos a adição e subtração
da esquerda para a

82
00:03:31,470 --> 00:03:34,450
direita, que resulta em 9.

83
00:03:34,450 --> 00:03:36,850
Nessa terceira expressão, podemos
ver alguns números negativos.

84
00:03:36,850 --> 00:03:39,020
O JavaScript também os
reconhece.

85
00:03:39,020 --> 00:03:41,810
E a primeira coisa que calculamos
é o 5 negativo

86
00:03:41,810 --> 00:03:44,050
vezes 6 dentro dos
parênteses.

87
00:03:44,050 --> 00:03:46,770
Isso irá nos dar um 30 negativo,
e o resto da

88
00:03:46,770 --> 00:03:48,180
expressão é calculado.

89
00:03:48,180 --> 00:03:52,340
E quando calculamos
7 vezes menos 2 para

90
00:03:52,340 --> 00:03:56,240
chegar a menos 14 e
o 30 negativo menos

91
00:03:56,240 --> 00:04:00,420
o 14 negativo resulta
em menos 16.

92
00:04:00,420 --> 00:04:03,820
Nesta última expressão, podemos
ver uma operação de módulo.

93
00:04:03,820 --> 00:04:06,980
Você pode achar que módulo
está dentro da letra M

94
00:04:06,980 --> 00:04:09,790
do PEMDAS, junto com
multiplicação, porque

95
00:04:09,790 --> 00:04:12,870
está no mesmo nível
hierárquico.

96
00:04:12,870 --> 00:04:15,710
Nesta operação, a primeira
coisa que faremos é

97
00:04:15,710 --> 00:04:17,320
o conteúdo entre parênteses:

98
00:04:17,320 --> 00:04:18,700
então 3 mais 1.

99
00:04:18,700 --> 00:04:20,140
Resulta em 4.

100
00:04:20,140 --> 00:04:24,920
Então, continuamos para a esquerda
8 módulo 4 dentro do último

101
00:04:24,920 --> 00:04:26,020
parênteses.

102
00:04:26,020 --> 00:04:30,950
O resto de 8
dividido por 4 é 0.

103
00:04:30,950 --> 00:04:33,670
Então somamos 4 e 0
e temos 4.

104
00:04:36,950 --> 00:04:39,370
Existem alguns comparadores
na linguagem JavaScript

105
00:04:39,370 --> 00:04:42,370
que nos permitem
comparar valores.

106
00:04:42,370 --> 00:04:44,910
Quando encontramos um comparador, ele
irá retornar algo chamado

107
00:04:44,910 --> 00:04:48,860
valor Booleano, que pode ser
verdadeiro ou falso.

108
00:04:48,860 --> 00:04:51,500
Aqui, você vê o comparador
maior que, que

109
00:04:51,500 --> 00:04:53,250
você ja deve ter visto.

110
00:04:53,250 --> 00:04:56,430
A questão quer saber,
6 é maior que 4?

111
00:04:56,430 --> 00:04:59,590
E o JavaScript retorna verdadeiro.

112
00:04:59,590 --> 00:05:01,930
Junto com o operador maior que,
temos o menor que.

113
00:05:01,930 --> 00:05:05,270
E aqui, a verificação,
9 é menor que 5?

114
00:05:05,270 --> 00:05:07,450
E retorna falso.

115
00:05:07,450 --> 00:05:10,850
Para comparar igualdade de numeros
no JavaScript temos que usar

116
00:05:10,850 --> 00:05:12,580
uma sintaxe especial.

117
00:05:12,580 --> 00:05:14,460
Não usamos um único
sinal de igual.

118
00:05:14,460 --> 00:05:17,120
Em vez disso, usamos
um sinal de igual duplo para

119
00:05:17,120 --> 00:05:18,670
retornar um valor Booleano.

120
00:05:18,670 --> 00:05:22,750
Esta questão quer saber se
3 é igual a 4, que,

121
00:05:22,750 --> 00:05:24,830
claro, é falso.

122
00:05:24,830 --> 00:05:27,530
JavaScript possui uma sintaxe especial
para saber quando dois

123
00:05:27,530 --> 00:05:29,190
valores não são iguais.

124
00:05:29,190 --> 00:05:32,830
Nós usamos um ponto de exclamação na
frente do sinal de igual para saber

125
00:05:32,830 --> 00:05:34,840
quando não são iguais.

126
00:05:34,840 --> 00:05:38,300
E essa questão em específico
diz, 12 é diferente de 4?

127
00:05:38,300 --> 00:05:40,850
Que resulta no valor de
verdadeiro, porque esses dois

128
00:05:40,850 --> 00:05:42,700
números não são iguais.

129
00:05:42,700 --> 00:05:44,030
Temos também, claro,
um operador maior que

130
00:05:44,030 --> 00:05:46,960
ou igual

131
00:05:46,960 --> 00:05:50,360
Esta questão quer saber se 8
é maior ou igual a

132
00:05:50,360 --> 00:05:51,530
menos 2.

133
00:05:51,530 --> 00:05:53,670
Observe que o operador maior que
vem na frente

134
00:05:53,670 --> 00:05:55,390
do sinal de igual.

135
00:05:55,390 --> 00:05:58,270
Esta questão retorna um valor de
verdadeiro, porque 8 é maior

136
00:05:58,270 --> 00:06:00,300
que ou igual a menos 2.

137
00:06:00,300 --> 00:06:03,580
Junto com o maior que ou igual,
temos o menor que ou igual.

138
00:06:03,580 --> 00:06:06,810
Esta questão pergunta se 10
é menor que ou igual 10?

139
00:06:06,810 --> 00:06:09,370
E como eles são iguais,
temos um resultado verdadeiro.

